// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  userId     Int      @id @default(autoincrement()) @map("user_id")
  email      String   @unique @map("email")
  password   String   @map("password")
  name       String   @map("name")
  role       Role     @default(APPLICANT)
  createdAt  DateTime @default(now()) @map("createdAt")
  updatedAt  DateTime @updatedAt @map("updatedAt")

  Resumes    Resumes[]
  ResumeLogs ResumeLogs[]
}

model Resumes {
  resumeId      Int        @id @default(autoincrement()) @map("resume_id")
  UserId        Int        @map("User_Id") // 외래 키, User 테이블 참조
  title         String     @map("title")
  introduction  String     @map("introduction")
  status        Status     @default(APPLY)
  createdAt     DateTime   @default(now()) @map("createdAt")
  updatedAt     DateTime   @updatedAt @map("updatedAt")

  Users         Users      @relation(fields: [UserId], references: [userId])
  ResumeLogs    ResumeLogs[]
}

model ResumeLogs {
  logId         Int       @id @default(autoincrement()) @map("log_id")
  ResumeId      Int       @map("Resume_Id") // 외래 키, Resumes 테이블 참조
  UserId        Int       @map("User_Id")   // 외래 키, Users 테이블 참조
  oldStatus     Status    @map("old_status")
  newStatus     Status    @map("new_status")
  reason        String    @map("reason")
  createdAt     DateTime  @default(now()) @map("createdAt")

  Resumes       Resumes   @relation(fields: [ResumeId], references: [resumeId])
  Users         Users     @relation(fields: [UserId], references: [userId])
}

enum Role {
  APPLICANT
  RECRUITER
}

enum Status {
  APPLY
  DROP
  PASS
  INTERVIEW1
  INTERVIEW2
  FINAL_PASS
}
